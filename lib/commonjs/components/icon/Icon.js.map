{"version":3,"sources":["Icon.tsx"],"names":["Icon","iconComponent","name","theme","AnimatedIcon","Animated","createAnimatedComponent","iconProps","color","value"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;;;;;AAcA,MAAMA,IAAI,GAAG,CAAC;AAAEC,EAAAA,aAAF;AAAiBC,EAAAA;AAAjB,CAAD,KAAwC;AACnD,QAAM;AAAEC,IAAAA;AAAF,MAAY,yBAAlB;;AACA,MAAIC,YAAY,GAAGC,+BAASC,uBAAT,CACjBL,aADiB,CAAnB;;AAIA,QAAMM,SAAS,GAAG,6CAAiB,MAAM;AACvC,WAAO;AACLC,MAAAA,KAAK,EAAEL,KAAK,CAACM,KAAN,KAAgB,OAAhB,GAA0B,OAA1B,GAAoC;AADtC,KAAP;AAGD,GAJiB,EAIf,CAACN,KAAD,CAJe,CAAlB;AAMA,sBAAO,6BAAC,YAAD;AAAc,IAAA,IAAI,EAAED,IAApB;AAA0B,IAAA,IAAI,EAAE,EAAhC;AAAoC,IAAA,aAAa,EAAEK;AAAnD,IAAP;AACD,CAbD;;4BAee,iBAAKP,IAAL,C","sourcesContent":["import React, { memo } from 'react';\n\nimport Animated, { useAnimatedProps } from 'react-native-reanimated';\nimport { useInternal } from '../../hooks';\n\ntype IconComponentProps = {\n  name: string;\n  size: number;\n  animatedProps: Partial<{ color: string }>;\n};\n\n// Update iconComponent type, React.ComponentClass<IconComponentProps, any>\ntype IconProps = {\n  iconComponent: any;\n  name: string;\n};\n\nconst Icon = ({ iconComponent, name }: IconProps) => {\n  const { theme } = useInternal();\n  let AnimatedIcon = Animated.createAnimatedComponent<IconComponentProps>(\n    iconComponent\n  );\n\n  const iconProps = useAnimatedProps(() => {\n    return {\n      color: theme.value === 'light' ? 'black' : 'white',\n    };\n  }, [theme]);\n\n  return <AnimatedIcon name={name} size={18} animatedProps={iconProps} />;\n};\n\nexport default memo(Icon);\n"]}