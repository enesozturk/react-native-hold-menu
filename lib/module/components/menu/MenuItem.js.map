{"version":3,"sources":["MenuItem.tsx"],"names":["React","useCallback","TouchableOpacity","GHTouchableOpacity","Animated","useAnimatedStyle","useSharedValue","Separator","styles","useInternal","CONTEXT_MENU_STATE","IS_IOS","BORDER_LIGHT_COLOR","BORDER_DARK_COLOR","isEqual","getColor","AnimatedIcon","ItemComponent","AnimatedTouchable","createAnimatedComponent","MenuItemComponent","item","isLast","state","theme","menuProps","opacity","borderStyles","borderBottomColor","value","borderBottomWidth","textColor","color","isTitle","isDestructive","handleOnPress","params","actionParams","text","onPress","END","pressInStyle","menuItem","menuItemTitleText","menuItemText","icon","withSeparator","MenuItem","memo"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport { TouchableOpacity } from 'react-native';\nimport { TouchableOpacity as GHTouchableOpacity } from 'react-native-gesture-handler';\nimport Animated, {\n  useAnimatedStyle,\n  useSharedValue,\n} from 'react-native-reanimated';\n\nimport Separator from './Separator';\nimport styles from './styles';\n\nimport { MenuItemProps } from './types';\nimport { useInternal } from '../../hooks';\nimport { CONTEXT_MENU_STATE, IS_IOS } from '../../constants';\nimport { BORDER_LIGHT_COLOR, BORDER_DARK_COLOR } from './constants';\nimport isEqual from 'lodash.isequal';\nimport { getColor } from './calculations';\nimport { AnimatedIcon } from '../provider/Provider';\n\nconst ItemComponent = IS_IOS ? TouchableOpacity : GHTouchableOpacity;\nconst AnimatedTouchable = Animated.createAnimatedComponent(ItemComponent);\n\ntype MenuItemComponentProps = {\n  item: MenuItemProps;\n  isLast?: boolean;\n};\n\nconst MenuItemComponent = ({ item, isLast }: MenuItemComponentProps) => {\n  const { state, theme, menuProps } = useInternal();\n  const opacity = useSharedValue(1);\n\n  const borderStyles = useAnimatedStyle(() => {\n    const borderBottomColor =\n      theme.value === 'dark' ? BORDER_DARK_COLOR : BORDER_LIGHT_COLOR;\n\n    return {\n      borderBottomColor,\n      borderBottomWidth: isLast ? 0 : 1,\n    };\n  }, [theme, isLast, item]);\n\n  const textColor = useAnimatedStyle(() => {\n    return { color: getColor(item.isTitle, item.isDestructive, theme.value) };\n  }, [theme, item]);\n\n  const handleOnPress = useCallback(() => {\n    if (!item.isTitle) {\n      const params = menuProps.value.actionParams[item.text] || [];\n      if (item.onPress) item.onPress(...params);\n      state.value = CONTEXT_MENU_STATE.END;\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [state, item]);\n\n  const pressInStyle = useAnimatedStyle(() => {\n    return {\n      opacity: opacity.value,\n    };\n  });\n\n  return (\n    <>\n      <AnimatedTouchable\n        onPressIn={() => (opacity.value = 0.4)}\n        onPressOut={() => (opacity.value = 1)}\n        onPress={handleOnPress}\n        activeOpacity={!item.isTitle ? 0.4 : 1}\n        style={[styles.menuItem, borderStyles, pressInStyle]}\n      >\n        <Animated.Text\n          style={[\n            item.isTitle ? styles.menuItemTitleText : styles.menuItemText,\n            textColor,\n          ]}\n        >\n          {item.text}\n        </Animated.Text>\n        {!item.isTitle && item.icon && (\n          <AnimatedIcon name={item.icon} size={18} style={textColor} />\n        )}\n      </AnimatedTouchable>\n      {item.withSeparator && <Separator />}\n    </>\n  );\n};\n\nconst MenuItem = React.memo(MenuItemComponent, isEqual);\nexport default MenuItem;\n"]}