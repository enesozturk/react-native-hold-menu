{"version":3,"sources":["calculations.ts"],"names":["MENU_WIDTH","MENU_TEXT_DARK_COLOR","MENU_TEXT_DESTRUCTIVE_COLOR_DARK","MENU_TEXT_DESTRUCTIVE_COLOR_LIGHT","MENU_TEXT_LIGHT_COLOR","MENU_TITLE_COLOR","leftOrRight","menuProps","anchorPositionHorizontal","value","anchorPosition","split","itemWidth","leftPosition","getColor","isTitle","isDestructive","themeValue"],"mappings":"AAEA,SAASA,UAAT,QAA2B,iBAA3B;AACA,SACEC,oBADF,EAEEC,gCAFF,EAGEC,iCAHF,EAIEC,qBAJF,EAKEC,gBALF,QAMO,aANP;AASA,OAAO,MAAMC,WAAW,GACtBC,SADyB,IAEtB;AACH;;AAEA,QAAMC,wBAAwB,GAAGD,SAAS,CAACE,KAAV,CAAgBC,cAAhB,CAA+BC,KAA/B,CAAqC,GAArC,EAA0C,CAA1C,CAAjC;AACA,QAAMC,SAAS,GAAGL,SAAS,CAACE,KAAV,CAAgBG,SAAlC;AAEA,MAAIC,YAAY,GAAG,CAAnB;AACAL,EAAAA,wBAAwB,KAAK,OAA7B,GACKK,YAAY,GAAG,CAACb,UAAD,GAAcY,SADlC,GAEIJ,wBAAwB,KAAK,MAA7B,GACCK,YAAY,GAAG,CADhB,GAECA,YAAY,GACX,CAACN,SAAS,CAACE,KAAV,CAAgBG,SAAjB,GACAZ,UAAU,GAAG,CADb,GAEAO,SAAS,CAACE,KAAV,CAAgBG,SAAhB,GAA4B,CAPlC;AASA,SAAOC,YAAP;AACD,CAnBM;AAqBP,OAAO,MAAMC,QAAQ,GAAG,CACtBC,OADsB,EAEtBC,aAFsB,EAGtBC,UAHsB,KAInB;AACH;;AACA,SAAOF,OAAO,GACVV,gBADU,GAEVW,aAAa,GACbC,UAAU,KAAK,MAAf,GACEf,gCADF,GAEEC,iCAHW,GAIbc,UAAU,KAAK,MAAf,GACAhB,oBADA,GAEAG,qBARJ;AASD,CAfM","sourcesContent":["import Animated from 'react-native-reanimated';\n\nimport { MENU_WIDTH } from '../../constants';\nimport {\n  MENU_TEXT_DARK_COLOR,\n  MENU_TEXT_DESTRUCTIVE_COLOR_DARK,\n  MENU_TEXT_DESTRUCTIVE_COLOR_LIGHT,\n  MENU_TEXT_LIGHT_COLOR,\n  MENU_TITLE_COLOR,\n} from './constants';\nimport type { MenuInternalProps } from './types';\n\nexport const leftOrRight = (\n  menuProps: Animated.SharedValue<MenuInternalProps>\n) => {\n  'worklet';\n\n  const anchorPositionHorizontal = menuProps.value.anchorPosition.split('-')[1];\n  const itemWidth = menuProps.value.itemWidth;\n\n  let leftPosition = 0;\n  anchorPositionHorizontal === 'right'\n    ? (leftPosition = -MENU_WIDTH + itemWidth)\n    : anchorPositionHorizontal === 'left'\n    ? (leftPosition = 0)\n    : (leftPosition =\n        -menuProps.value.itemWidth -\n        MENU_WIDTH / 2 +\n        menuProps.value.itemWidth / 2);\n\n  return leftPosition;\n};\n\nexport const getColor = (\n  isTitle: boolean | undefined,\n  isDestructive: boolean | undefined,\n  themeValue: 'light' | 'dark'\n) => {\n  'worklet';\n  return isTitle\n    ? MENU_TITLE_COLOR\n    : isDestructive\n    ? themeValue === 'dark'\n      ? MENU_TEXT_DESTRUCTIVE_COLOR_DARK\n      : MENU_TEXT_DESTRUCTIVE_COLOR_LIGHT\n    : themeValue === 'dark'\n    ? MENU_TEXT_DARK_COLOR\n    : MENU_TEXT_LIGHT_COLOR;\n};\n"]}