{"version":3,"sources":["Provider.tsx"],"names":["React","memo","useEffect","useMemo","PortalProvider","Animated","useSharedValue","InternalContext","Backdrop","CONTEXT_MENU_STATE","Menu","AnimatedIcon","ProviderComponent","children","theme","selectedTheme","iconComponent","createAnimatedComponent","state","UNDETERMINED","menuProps","itemHeight","itemWidth","itemX","itemY","items","anchorPosition","menuHeight","transformValue","actionParams","value","internalContextVariables","Provider"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,OAAjC,QAAgD,OAAhD;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,QAAP,IAAmBC,cAAnB,QAAyC,yBAAzC;AACA,SAASC,eAAT,QAAgC,wBAAhC,C,CAEA;;AACA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;;AAGA,SAASC,kBAAT,QAAmC,iBAAnC;AAEA,OAAOC,IAAP,MAAiB,SAAjB;AAMA,OAAO,IAAIC,YAAJ;;AAEP,MAAMC,iBAAiB,GAAG,CAAC;AACzBC,EAAAA,QADyB;AAEzBC,EAAAA,KAAK,EAAEC,aAFkB;AAGzBC,EAAAA;AAHyB,CAAD,KAIG;AAC3B,MAAIA,aAAJ,EACEL,YAAY,GAAGN,QAAQ,CAACY,uBAAT,CAAiCD,aAAjC,CAAf;AAEF,QAAME,KAAK,GAAGZ,cAAc,CAC1BG,kBAAkB,CAACU,YADO,CAA5B;AAGA,QAAML,KAAK,GAAGR,cAAc,CAAmBS,aAAa,IAAI,OAApC,CAA5B;AACA,QAAMK,SAAS,GAAGd,cAAc,CAAoB;AAClDe,IAAAA,UAAU,EAAE,CADsC;AAElDC,IAAAA,SAAS,EAAE,CAFuC;AAGlDC,IAAAA,KAAK,EAAE,CAH2C;AAIlDC,IAAAA,KAAK,EAAE,CAJ2C;AAKlDC,IAAAA,KAAK,EAAE,EAL2C;AAMlDC,IAAAA,cAAc,EAAE,YANkC;AAOlDC,IAAAA,UAAU,EAAE,CAPsC;AAQlDC,IAAAA,cAAc,EAAE,CARkC;AASlDC,IAAAA,YAAY,EAAE;AAToC,GAApB,CAAhC;AAYA3B,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,KAAK,CAACgB,KAAN,GAAcf,aAAa,IAAI,OAA/B,CADc,CAEd;AACD,GAHQ,EAGN,CAACA,aAAD,CAHM,CAAT;AAKA,QAAMgB,wBAAwB,GAAG5B,OAAO,CACtC,OAAO;AACLe,IAAAA,KADK;AAELJ,IAAAA,KAFK;AAGLM,IAAAA;AAHK,GAAP,CADsC,EAMtC,CAACF,KAAD,EAAQJ,KAAR,EAAeM,SAAf,CANsC,CAAxC;AASA,sBACE,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEW;AAAjC,kBACE,oBAAC,cAAD,QACGlB,QADH,eAEE,oBAAC,QAAD,OAFF,eAGE,oBAAC,IAAD,OAHF,CADF,CADF;AASD,CA/CD;;AAiDA,MAAMmB,QAAQ,gBAAG/B,IAAI,CAACW,iBAAD,CAArB;AAEA,eAAeoB,QAAf","sourcesContent":["import React, { memo, useEffect, useMemo } from 'react';\nimport { PortalProvider } from '@gorhom/portal';\nimport Animated, { useSharedValue } from 'react-native-reanimated';\nimport { InternalContext } from '../../context/internal';\n\n// Components\nimport { Backdrop } from '../backdrop';\n\n// Utils\nimport { HoldMenuProviderProps } from './types';\nimport { StateProps, Action } from './reducer';\nimport { CONTEXT_MENU_STATE } from '../../constants';\nimport { MenuInternalProps } from '../menu/types';\nimport Menu from '../menu';\nexport interface Store {\n  state: StateProps;\n  dispatch?: React.Dispatch<Action>;\n}\n\nexport let AnimatedIcon: any;\n\nconst ProviderComponent = ({\n  children,\n  theme: selectedTheme,\n  iconComponent,\n}: HoldMenuProviderProps) => {\n  if (iconComponent)\n    AnimatedIcon = Animated.createAnimatedComponent(iconComponent);\n\n  const state = useSharedValue<CONTEXT_MENU_STATE>(\n    CONTEXT_MENU_STATE.UNDETERMINED\n  );\n  const theme = useSharedValue<'light' | 'dark'>(selectedTheme || 'light');\n  const menuProps = useSharedValue<MenuInternalProps>({\n    itemHeight: 0,\n    itemWidth: 0,\n    itemX: 0,\n    itemY: 0,\n    items: [],\n    anchorPosition: 'top-center',\n    menuHeight: 0,\n    transformValue: 0,\n    actionParams: {},\n  });\n\n  useEffect(() => {\n    theme.value = selectedTheme || 'light';\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedTheme]);\n\n  const internalContextVariables = useMemo(\n    () => ({\n      state,\n      theme,\n      menuProps,\n    }),\n    [state, theme, menuProps]\n  );\n\n  return (\n    <InternalContext.Provider value={internalContextVariables}>\n      <PortalProvider>\n        {children}\n        <Backdrop />\n        <Menu />\n      </PortalProvider>\n    </InternalContext.Provider>\n  );\n};\n\nconst Provider = memo(ProviderComponent);\n\nexport default Provider;\n"]}