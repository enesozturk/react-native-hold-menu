{"version":3,"sources":["HoldItem.tsx"],"names":["React","memo","useMemo","View","TapGestureHandler","LongPressGestureHandler","Animated","measure","runOnJS","useAnimatedGestureHandler","useAnimatedProps","useAnimatedRef","useAnimatedStyle","useSharedValue","withDelay","withTiming","withSequence","withSpring","useAnimatedReaction","Portal","nanoid","Haptics","getTransformOrigin","calculateMenuHeight","HOLD_ITEM_TRANSFORM_DURATION","HOLD_ITEM_SCALE_DOWN_DURATION","HOLD_ITEM_SCALE_DOWN_VALUE","SPRING_CONFIGURATION","WINDOW_HEIGHT","WINDOW_WIDTH","CONTEXT_MENU_STATE","useDeviceOrientation","styles","styleGuide","useInternal","HoldItemComponent","items","bottom","containerStyles","disableMove","menuAnchorPosition","activateOn","hapticFeedback","actionParams","closeOnTap","children","attachedView","state","menuProps","deviceOrientation","isActive","isAnimationStarted","itemRectY","itemRectX","itemRectWidth","itemRectHeight","itemScale","transformValue","transformOrigin","key","menuHeight","itemsWithSeparator","filter","item","withSeparator","length","isHold","containerRef","hapticResponse","style","selectionAsync","impactAsync","ImpactFeedbackStyle","notificationAsync","NotificationFeedbackType","activateAnimation","ctx","didMeasureLayout","measured","value","pageY","pageX","height","width","position","calculateTransformValue","isAnchorPointTop","includes","tY","topTransform","spacing","bototmTransform","setMenuProps","itemHeight","itemWidth","itemY","itemX","anchorPosition","scaleBack","duration","onCompletion","isFinised","isListValid","ACTIVE","scaleHold","scaleTap","canCallActivateFunctions","willActivateWithTap","gestureEvent","onActive","_","context","onFinish","overlayGestureEvent","END","animatedContainerStyle","animateOpacity","opacity","transform","scale","containerStyle","animatedPortalStyle","transformAnimation","zIndex","top","left","translateY","portalContainerStyle","holdItem","animatedPortalProps","pointerEvents","_state","GestureHandler","handlerChildren","PortalOverlay","portalOverlay","overflow","HoldItem"],"mappings":"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","sourcesContent":["import React, { memo, useMemo } from 'react';\nimport { View, ViewProps } from 'react-native';\n\n//#region reanimated & gesture handler\nimport {\n  TapGestureHandler,\n  LongPressGestureHandler,\n  TapGestureHandlerGestureEvent,\n  LongPressGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport Animated, {\n  measure,\n  runOnJS,\n  useAnimatedGestureHandler,\n  useAnimatedProps,\n  useAnimatedRef,\n  useAnimatedStyle,\n  useSharedValue,\n  withDelay,\n  withTiming,\n  withSequence,\n  withSpring,\n  useAnimatedReaction,\n} from 'react-native-reanimated';\n//#endregion\n\n//#region dependencies\nimport { Portal } from '@gorhom/portal';\nimport { nanoid } from 'nanoid/non-secure';\nimport * as Haptics from 'expo-haptics';\n//#endregion\n\n//#region utils & types\nimport {\n  TransformOriginAnchorPosition,\n  getTransformOrigin,\n  calculateMenuHeight,\n} from '../../utils/calculations';\nimport {\n  HOLD_ITEM_TRANSFORM_DURATION,\n  HOLD_ITEM_SCALE_DOWN_DURATION,\n  HOLD_ITEM_SCALE_DOWN_VALUE,\n  SPRING_CONFIGURATION,\n  WINDOW_HEIGHT,\n  WINDOW_WIDTH,\n  CONTEXT_MENU_STATE,\n} from '../../constants';\nimport { useDeviceOrientation } from '../../hooks';\nimport styles from './styles';\n\nimport type { HoldItemProps, GestureHandlerProps } from './types';\nimport styleGuide from '../../styleGuide';\nimport { useInternal } from '../../hooks';\n//#endregion\n\ntype Context = { didMeasureLayout: boolean };\n\nconst HoldItemComponent = ({\n  items,\n  bottom,\n  containerStyles,\n  disableMove,\n  menuAnchorPosition,\n  activateOn,\n  hapticFeedback,\n  actionParams,\n  closeOnTap,\n  children,\n  attachedView,\n}: HoldItemProps) => {\n  //#region hooks\n  const { state, menuProps } = useInternal();\n  const deviceOrientation = useDeviceOrientation();\n  //#endregion\n\n  //#region variables\n  const isActive = useSharedValue(false);\n  const isAnimationStarted = useSharedValue(false);\n\n  const itemRectY = useSharedValue<number>(0);\n  const itemRectX = useSharedValue<number>(0);\n  const itemRectWidth = useSharedValue<number>(0);\n  const itemRectHeight = useSharedValue<number>(0);\n  const itemScale = useSharedValue<number>(1);\n  const transformValue = useSharedValue<number>(0);\n\n  const transformOrigin = useSharedValue<TransformOriginAnchorPosition>(\n    menuAnchorPosition || 'top-right'\n  );\n\n  const key = useMemo(() => `hold-item-${nanoid()}`, []);\n  const menuHeight = useMemo(() => {\n    const itemsWithSeparator = items.filter(item => item.withSeparator);\n    return calculateMenuHeight(items.length, itemsWithSeparator.length);\n  }, [items]);\n\n  const isHold = !activateOn || activateOn === 'hold';\n  //#endregion\n\n  //#region refs\n  const containerRef = useAnimatedRef<Animated.View>();\n  //#endregion\n\n  //#region functions\n  const hapticResponse = () => {\n    const style = !hapticFeedback ? 'Medium' : hapticFeedback;\n    switch (style) {\n      case `Selection`:\n        Haptics.selectionAsync();\n        break;\n      case `Light`:\n      case `Medium`:\n      case `Heavy`:\n        Haptics.impactAsync(Haptics.ImpactFeedbackStyle[style]);\n        break;\n      case `Success`:\n      case `Warning`:\n      case `Error`:\n        Haptics.notificationAsync(Haptics.NotificationFeedbackType[style]);\n        break;\n      default:\n    }\n  };\n  //#endregion\n\n  //#region worklet functions\n  const activateAnimation = (ctx: any) => {\n    'worklet';\n    if (!ctx.didMeasureLayout) {\n      const measured = measure(containerRef);\n\n      itemRectY.value = measured.pageY;\n      itemRectX.value = measured.pageX;\n      itemRectHeight.value = measured.height;\n      itemRectWidth.value = measured.width;\n\n      if (!menuAnchorPosition) {\n        const position = getTransformOrigin(\n          measured.pageX,\n          itemRectWidth.value,\n          deviceOrientation === 'portrait' ? WINDOW_WIDTH : WINDOW_HEIGHT,\n          bottom\n        );\n        transformOrigin.value = position;\n      }\n    }\n  };\n\n  const calculateTransformValue = () => {\n    'worklet';\n\n    const height =\n      deviceOrientation === 'portrait' ? WINDOW_HEIGHT : WINDOW_WIDTH;\n\n    const isAnchorPointTop = transformOrigin.value.includes('top');\n\n    let tY = 0;\n    if (!disableMove) {\n      if (isAnchorPointTop) {\n        const topTransform =\n          itemRectY.value +\n          itemRectHeight.value +\n          menuHeight +\n          styleGuide.spacing * 2;\n\n        tY = topTransform > height ? height - topTransform : 0;\n      } else {\n        const bototmTransform = itemRectY.value - menuHeight;\n        tY =\n          bototmTransform < 0 ? -bototmTransform + styleGuide.spacing * 2 : 0;\n      }\n    }\n    return tY;\n  };\n\n  const setMenuProps = () => {\n    'worklet';\n\n    menuProps.value = {\n      itemHeight: itemRectHeight.value,\n      itemWidth: itemRectWidth.value,\n      itemY: itemRectY.value,\n      itemX: itemRectX.value,\n      anchorPosition: transformOrigin.value,\n      menuHeight: menuHeight,\n      items,\n      transformValue: transformValue.value,\n      actionParams: actionParams || {},\n    };\n  };\n\n  const scaleBack = () => {\n    'worklet';\n    itemScale.value = withTiming(1, {\n      duration: HOLD_ITEM_TRANSFORM_DURATION / 2,\n    });\n  };\n\n  const onCompletion = (isFinised: boolean) => {\n    'worklet';\n    const isListValid = items && items.length > 0;\n    if (isFinised && isListValid) {\n      state.value = CONTEXT_MENU_STATE.ACTIVE;\n      isActive.value = true;\n      scaleBack();\n      if (hapticFeedback !== 'None') {\n        runOnJS(hapticResponse)();\n      }\n    }\n\n    isAnimationStarted.value = false;\n\n    // TODO: Warn user if item list is empty or not given\n  };\n\n  const scaleHold = () => {\n    'worklet';\n    itemScale.value = withTiming(\n      HOLD_ITEM_SCALE_DOWN_VALUE,\n      { duration: HOLD_ITEM_SCALE_DOWN_DURATION },\n      onCompletion\n    );\n  };\n\n  const scaleTap = () => {\n    'worklet';\n    isAnimationStarted.value = true;\n\n    itemScale.value = withSequence(\n      withTiming(HOLD_ITEM_SCALE_DOWN_VALUE, {\n        duration: HOLD_ITEM_SCALE_DOWN_DURATION,\n      }),\n      withTiming(\n        1,\n        {\n          duration: HOLD_ITEM_TRANSFORM_DURATION / 2,\n        },\n        onCompletion\n      )\n    );\n  };\n\n  /**\n   * When use tap activation (\"tap\") and trying to tap multiple times,\n   * scale animation is called again despite it is started. This causes a bug.\n   * To prevent this, it is better to check is animation already started.\n   */\n  const canCallActivateFunctions = () => {\n    'worklet';\n    const willActivateWithTap =\n      activateOn === 'double-tap' || activateOn === 'tap';\n\n    return (\n      (willActivateWithTap && !isAnimationStarted.value) || !willActivateWithTap\n    );\n  };\n  //#endregion\n\n  //#region gesture events\n  const gestureEvent = useAnimatedGestureHandler<\n    LongPressGestureHandlerGestureEvent | TapGestureHandlerGestureEvent,\n    Context\n  >({\n    onActive: (_, context) => {\n      if (canCallActivateFunctions()) {\n        if (!context.didMeasureLayout) {\n          activateAnimation(context);\n          transformValue.value = calculateTransformValue();\n          setMenuProps();\n          context.didMeasureLayout = true;\n        }\n\n        if (!isActive.value) {\n          if (isHold) {\n            scaleHold();\n          } else {\n            scaleTap();\n          }\n        }\n      }\n    },\n    onFinish: (_, context) => {\n      context.didMeasureLayout = false;\n      if (isHold) {\n        scaleBack();\n      }\n    },\n  });\n\n  const overlayGestureEvent = useAnimatedGestureHandler<\n    TapGestureHandlerGestureEvent,\n    Context\n  >({\n    onActive: _ => {\n      if (closeOnTap) state.value = CONTEXT_MENU_STATE.END;\n    },\n  });\n  //#endregion\n\n  //#region animated styles & props\n  const animatedContainerStyle = useAnimatedStyle(() => {\n    const animateOpacity = () =>\n      withDelay(HOLD_ITEM_TRANSFORM_DURATION, withTiming(1, { duration: 0 }));\n\n    return {\n      opacity: isActive.value ? 0 : animateOpacity(),\n      transform: [\n        {\n          scale: isActive.value\n            ? withTiming(1, { duration: HOLD_ITEM_TRANSFORM_DURATION })\n            : itemScale.value,\n        },\n      ],\n    };\n  });\n  const containerStyle = React.useMemo(\n    () => [containerStyles, animatedContainerStyle],\n    [containerStyles, animatedContainerStyle]\n  );\n\n  const animatedPortalStyle = useAnimatedStyle(() => {\n    const animateOpacity = () =>\n      withDelay(HOLD_ITEM_TRANSFORM_DURATION, withTiming(0, { duration: 0 }));\n\n    let tY = calculateTransformValue();\n    const transformAnimation = () =>\n      disableMove\n        ? 0\n        : isActive.value\n        ? withSpring(tY, SPRING_CONFIGURATION)\n        : withTiming(-0.1, { duration: HOLD_ITEM_TRANSFORM_DURATION });\n\n    return {\n      zIndex: 10,\n      position: 'absolute',\n      top: itemRectY.value,\n      left: itemRectX.value,\n      width: itemRectWidth.value,\n      height: itemRectHeight.value,\n      opacity: isActive.value ? 1 : animateOpacity(),\n      transform: [\n        {\n          translateY: transformAnimation(),\n        },\n        {\n          scale: isActive.value\n            ? withTiming(1, { duration: HOLD_ITEM_TRANSFORM_DURATION })\n            : itemScale.value,\n        },\n      ],\n    };\n  });\n  const portalContainerStyle = useMemo(\n    () => [styles.holdItem, animatedPortalStyle],\n    [animatedPortalStyle]\n  );\n\n  const animatedPortalProps = useAnimatedProps<ViewProps>(() => ({\n    pointerEvents: isActive.value ? 'auto' : 'none',\n  }));\n  //#endregion\n\n  //#region animated effects\n  useAnimatedReaction(\n    () => state.value,\n    _state => {\n      if (_state === CONTEXT_MENU_STATE.END) {\n        isActive.value = false;\n      }\n    }\n  );\n  //#endregion\n\n  //#region components\n  const GestureHandler = useMemo(() => {\n    switch (activateOn) {\n      case `double-tap`:\n        return ({ children: handlerChildren }: GestureHandlerProps) => (\n          <TapGestureHandler\n            numberOfTaps={2}\n            onHandlerStateChange={gestureEvent}\n          >\n            {handlerChildren}\n          </TapGestureHandler>\n        );\n      case `tap`:\n        return ({ children: handlerChildren }: GestureHandlerProps) => (\n          <TapGestureHandler\n            numberOfTaps={1}\n            onHandlerStateChange={gestureEvent}\n          >\n            {handlerChildren}\n          </TapGestureHandler>\n        );\n      // default is hold\n      default:\n        return ({ children: handlerChildren }: GestureHandlerProps) => (\n          <LongPressGestureHandler\n            minDurationMs={150}\n            onHandlerStateChange={gestureEvent}\n          >\n            {handlerChildren}\n          </LongPressGestureHandler>\n        );\n    }\n  }, [activateOn, gestureEvent]);\n\n  const PortalOverlay = useMemo(() => {\n    return () => (\n      <TapGestureHandler\n        numberOfTaps={1}\n        onHandlerStateChange={overlayGestureEvent}\n      >\n        <Animated.View style={styles.portalOverlay} />\n      </TapGestureHandler>\n    );\n  }, [overlayGestureEvent]);\n  //#endregion\n\n  //#region render\n  return (\n    <>\n      <GestureHandler>\n        <Animated.View ref={containerRef} style={containerStyle}>\n          {children}\n        </Animated.View>\n      </GestureHandler>\n\n      <Portal key={key} name={key}>\n        <Animated.View\n          key={key}\n          style={portalContainerStyle}\n          animatedProps={animatedPortalProps}\n        >\n          <PortalOverlay />\n          <View\n            style={{\n              position: 'absolute',\n              overflow: 'hidden',\n              top: -20,\n            }}\n          >\n            {attachedView}\n          </View>\n          {children}\n        </Animated.View>\n      </Portal>\n    </>\n  );\n  //#endregion\n};\n\nconst HoldItem = memo(HoldItemComponent);\n\nexport default HoldItem;\n"]}